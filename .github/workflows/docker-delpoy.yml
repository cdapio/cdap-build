name: Docker Deploy
on:
  workflow_dispatch:
    # workaround to run manual trigger for a particular branch
    inputs:
      branch:
        description: "branch name on which workflow will be triggered"
        required: true
        default: "develop"

env:
  TAG_NAME: latest

jobs:
  docker-deploy:
    runs-on: cdapio-hub-k8-runner

    steps:
      - name: Get Secrets from GCP Secret Manager
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0'
        with:
          secrets: |-
            CASK_DOCKER_HUB_USERNAME:cdapio-github-builds/CASK_DOCKER_HUB_USERNAME
            CASK_DOCKER_HUB_PASSWORD:cdapio-github-builds/CASK_DOCKER_HUB_PASSWORD

      - name: Recursively Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          path: cdap-build
          ref: check-docker-poc

      - name: Update Submodules
        working-directory: cdap-build
        run: |
          git submodule update --init --recursive --remote

      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.workflow }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.workflow }}

      - name: Trigger Cloud Build
        working-directory: cdap-build
        run: |
          gcloud builds submit --config cloudbuild.json . --timeout=1200s
          

#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6
#        with:
#          install: true
#
#      - name: Login to DockerHub
#        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
#        with:
#          username: ${{ steps.secrets.outputs.CASK_DOCKER_HUB_USERNAME }}
#          password: ${{ steps.secrets.outputs.CASK_DOCKER_HUB_PASSWORD }}
#
#      - name: Build & Push Docker Image
#        working-directory: cdap-build/cdap/cdap-distributions/src
#        run: |
#          docker build --no-cache -f ./Dockerfile . -t caskdata/cdap-sandbox:latest
