name: Build and Unit Test
on: 
  schedule:
    - cron: '0 8 * * *'
  # Delete once testec
  push:

jobs:
  build:
    runs-on: cdapio-hub-k8-runner
    steps:
      - name: Get Secrets from GCP Secret Manager
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0'
        with:
          secrets: |-
            CDAP_OSSRH_USERNAME:cdapio-github-builds/CDAP_OSSRH_USERNAME
            CDAP_OSSRH_PASSWORD:cdapio-github-builds/CDAP_OSSRH_PASSWORD
            CDAP_GPG_PASSPHRASE:cdapio-github-builds/CDAP_GPG_PASSPHRASE
            CDAP_GPG_PRIVATE_KEY:cdapio-github-builds/CDAP_GPG_PRIVATE_KEY

      - name: Recursively Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          path: cdap
          ref: develop

      - name: Update Submodules
        working-directory: cdap
        run: |
          git submodule update --init --recursive --remote

      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.workflow }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.workflow }}

      # - name: Run Tests
      #   working-directory: ./cdap
      #   run: MAVEN_OPTS="-Xmx6000m" mvn test -Drat.skip=true -fae -T2C -U -V -am -amd -P templates,examples,unit-tests --fail-never -Dmaven.test.failure.ignore=true -Dmaven.wagon.http.retryHandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=30

      - name: Run Tests and Build Standalone
        working-directory: ./cdap
        run: MAVEN_OPTS="-Xmx3056m" mvn -Drat.skip=true -e -T2C clean package -Dgpg.skip --fail-never -Dmaven.test.failure.ignore=true -Ddocker.skip=true -nsu -am -amd -P templates,dist,release,unit-tests -Dadditional.artifacts.dir=$(pwd)/app-artifacts -Dsecurity.extensions.dir=$(pwd)/security-extensions -Dmaven.wagon.http.retryHandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=30

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2.2.2
        if: always()
        with:
          name: Build debug files
          path: |
            **/target/rat.txt
            **/target/surefire-reports/*
      
      - name: Surefire Report
        # Pinned 1.0.5 version
        uses: ScaCap/action-surefire-report@ad808943e6bfbd2e6acba7c53fdb5c89534da533
        if: always()
        with:
          # GITHUB_TOKEN
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}

      - name: Find Build Version 
        working-directory: ./cdap/cdap
        run:  |
          export VERSION=$(ls cdap-standalone/target/cdap-sandbox*zip | cut --delimiter=- --fields="-3" --complement | rev | cut --delimiter="." --fields=1 --complement | rev)
          echo "CDAP_VERSION=${VERSION}"
          echo "CDAP_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Upload CDAP Standalone
        uses: actions/upload-artifact@v2
        with:
          name: CDAP-Standalone-${{env.CDAP_VERSION}}
          path: ./cdap/cdap/cdap-standalone/target/cdap-sandbox-${{env.CDAP_VERSION}}.zip

      - name: Set up GPG conf
        run: |
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
      
      - name: Import GPG key
        run: |
          echo "$GPG_PRIVATE_KEY" > private.key
          gpg --import --batch private.key
        env:
          GPG_PRIVATE_KEY: ${{ steps.secrets.outputs.CDAP_GPG_PRIVATE_KEY }}

      - name: Deploy Maven
        working-directory: cdap
        run: mvn deploy -B -V -DskipTests -DskipLocalStaging=true -Ddocker.skip=true -P examples,templates,dist,release,rpm-prepare,rpm,deb-prepare,deb,tgz,unit-tests -Dadditional.artifacts.dir=$(pwd)/app-artifacts -Dsecurity.extensions.dir=$(pwd)/security-extensions -Dmaven.wagon.http.retryHandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=30 -Dmaven.wagon.http.retryHandler.requestSentEnabled=true -Dgpg.passphrase=$CDAP_GPG_PASSPHRASE
        env:
          CDAP_OSSRH_USERNAME: ${{ steps.secrets.outputs.CDAP_OSSRH_USERNAME }}
          CDAP_OSSRH_PASSWORD: ${{ steps.secrets.outputs.CDAP_OSSRH_PASSWORD }}
          CDAP_GPG_PASSPHRASE: ${{ steps.secrets.outputs.CDAP_GPG_PASSPHRASE }}
          MAVEN_OPTS: "-Xmx6000m"
