name: Build and Unit Test
on: 
  schedule:
    - cron: '0 8 * * *'
  # Delete once testec
  push:

jobs:
  build:
    runs-on: k8s-runner-build
    steps:
      - name: Recursively Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          path: cdap
          ref: release/6.7

      - name: Update Submodules
        working-directory: ./cdap
        run: |
          git submodule update --init --recursive --remote

      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.workflow }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.workflow }}

      # - name: Checkout Apache Sentry
      #   uses: actions/checkout@v2
      #   with:
      #     repository: apache/sentry
      #     ref: 'release-1.7.0'
      #     path: cdap/apache-sentry

      # - name: Set up Maven
      #   run: |
      #     wget -O- https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar -xzv
      #     mv apache-maven-3.6.3 cdap/
      #     cd cdap
      #     ln -s apache-maven-3.6.3/bin/mvn mvn
      #     cd ..

      - name: Create dirs
        working-directory: ./cdap
        run: |
          mkdir -p app-artifacts
          mkdir -p security-extensions
          mkdir -p cdap/cdap-distributions/target

      # - name: Set Up Java 8
      #   uses: actions/setup-java@v2
      #   with:
      #     distribution: 'adopt'
      #     java-version: '8'

      # - name: Build Apache Sentry
      #   working-directory: ./cdap
      #   run: ./mvn install -T2C -DskipTests -f apache-sentry

      - name: Installing CDAP API JARs
        working-directory: ./cdap/cdap
        run: | 
          MAVEN_OPTS="-Xmx3056m -XX:MaxPermSize=128m" mvn -Drat.skip=true -e clean install -U -B -am 

      - name: Build Plugins
        working-directory: ./cdap/app-artifacts/hydrator-plugins
        run: mvn clean package -fae -T 2 -B -V -DcloudBuild -Dmaven.wagon.http.retryHandler.count=3 -Drat.skip=true -Dmaven.wagon.httpconnectionManager.ttlSeconds=25

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2.2.2
        if: always()
        with:
          name: Build debug files
          path: |
            **/target/rat.txt
            **/target/surefire-reports/*

      - name: Build Standalone
        working-directory: ./cdap/cdap
        run: MAVEN_OPTS="-Xmx3056m -XX:MaxPermSize=128m" mvn "-Dtest=\!%regex[AutoJoiner], \!%regex[DataPipeline]" -Dsurefire.failIfNoSpecifiedTests=false -Drat.skip=true -e -T2C clean package -U -pl cdap-standalone,cdap-app-templates/cdap-etl -am -amd -P templates,dist,release,unit-tests -Dadditional.artifacts.dir=$(pwd)/../app-artifacts -Dsecurity.extensions.dir=$(pwd)/../security-extensions

      - name: Find Build Version 
        working-directory: ./cdap/cdap
        run:  |
          export VERSION=$(ls cdap-standalone/target/cdap-sandbox*zip | cut --delimiter=- --fields="-3" --complement | rev | cut --delimiter="." --fields=1 --complement | rev)
          echo "CDAP_VERSION=${VERSION}"
          echo "CDAP_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Upload CDAP Standalone
        uses: actions/upload-artifact@v2
        with:
          name: CDAP-Standalone-${{env.CDAP_VERSION}}
          path: ./cdap/cdap/cdap-standalone/target/cdap-sandbox-${{env.CDAP_VERSION}}.zip

      - name: Make failure directory and tar
        if: ${{ failure() }}
        run: |
          mkdir -p /tmp/cdap-failure
          tar -czvf /tmp/cdap-failure/build.gz /tmp/cdap-build/cdap-build/

      - name: Upload logs on fail
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: Build failure logs
          path: /tmp/cdap-failure
